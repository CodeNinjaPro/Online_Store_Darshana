//Generated by 24HRS
package Servlets;

import Controllers.AttendanceController;
import Models.Salary_shedule;
import Controllers.Salary_sheduleController;
import Models.Attendance;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet(name = "Salary_sheduleServlet", urlPatterns = {"/Salary_sheduleServlet"})

public class Salary_sheduleServlet extends HttpServlet {

    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        response.setContentType("text/html;charset=UTF-8");
        try (PrintWriter out = response.getWriter()) {

            String action = request.getParameter("action");
            String pattern = "yyyy/MM/dd - HH:mm:ss";
            SimpleDateFormat simpleDateFormat = new SimpleDateFormat(pattern);
            String current_date = simpleDateFormat.format(new Date());

            if (action.equals("insert")) {
                int emp_id = Integer.parseInt(request.getParameter("emp_id"));
                double basic_salary = Double.parseDouble(request.getParameter("basic_salary"));
                double ot_rate = Double.parseDouble(request.getParameter("ot_rate"));
                double bonus = Double.parseDouble(request.getParameter("bonus"));
                Salary_shedule obj = new Salary_shedule();
                obj.setEmp_id(emp_id);
                obj.setBasic_salary(basic_salary);
                obj.setOt_rate(ot_rate);
                obj.setBonus(bonus);
                obj.setDate_time(current_date);
                try {
                    Salary_sheduleController.getInstance().Save(obj);
                    response.getWriter().println("Saved!");
                } catch (Exception ex) {
                    //error
                }
            } else if (action.equals("update")) {
                int salary_shedule_id = Integer.parseInt(request.getParameter("salary_shedule_id"));
                int emp_id = Integer.parseInt(request.getParameter("emp_id"));
                double basic_salary = Double.parseDouble(request.getParameter("basic_salary"));
                double ot_rate = Double.parseDouble(request.getParameter("ot_rate"));
                double bonus = Double.parseDouble(request.getParameter("bonus"));
                Salary_shedule obj = new Salary_shedule();
                obj.setSalary_shedule_id(salary_shedule_id);
                obj.setEmp_id(emp_id);
                obj.setBasic_salary(basic_salary);
                obj.setOt_rate(ot_rate);
                obj.setBonus(bonus);
                obj.setDate_time(current_date);
                try {
                    Salary_sheduleController.getInstance().Update(obj);
                    response.getWriter().println("Updated!");
                } catch (Exception ex) {
                    //error
                }

            } else if (action.equals("delete")) {
                int salary_shedule_id = Integer.parseInt(request.getParameter("salary_shedule_id"));
                Salary_shedule obj = new Salary_shedule();
                obj.setSalary_shedule_id(salary_shedule_id);
                try {
                    Salary_sheduleController.getInstance().Delete(obj);
                    response.getWriter().println("Updated!");
                } catch (Exception ex) {
                    //error
                }
            } else if (action.equals("serch")) {
                try {
                    List<Salary_shedule> list = new ArrayList<>();
                    List stringList = new ArrayList<>();

                    list = Salary_sheduleController.getInstance().SearchAll();
                    for (int i = 0; i < list.size(); i++) {
                        String s = list.get(i).getSalary_shedule_id() + "_" + list.get(i).getEmp_id() + "_" + list.get(i).getBasic_salary() + "_" + list.get(i).getOt_rate() + "_" + list.get(i).getBonus() + "_" + list.get(i).getDate_time() + "_";
                        stringList.add(s);
                    }
                    String b = String.join("~", stringList);
                    response.getWriter().println(b);
                } catch (Exception ex) {
                    //Error
                }

            } else if (action.equals("report")) {
                try {
                    String file = "C:/xampp/htdocs/Reports/report.pdf";

                    Document doc = new Document();

                    PdfWriter.getInstance(doc, new FileOutputStream(file));
                    doc.open();

                    Paragraph topic = new Paragraph();
                    topic.add("Arunonanda Supermarket");
                    topic.setAlignment(Element.ALIGN_LEFT);

                    Paragraph d = new Paragraph();
                    d.add(current_date);
                    d.setAlignment(Element.ALIGN_LEFT);

                    Paragraph para = new Paragraph();
                    para.add("Salary Stracture Report");
                    para.setAlignment(Element.ALIGN_CENTER);

                    doc.add(topic);
                    doc.add(d);
                    doc.add(para);
                    doc.add(Chunk.NEWLINE);
                    doc.add(Chunk.NEWLINE);

                    float x[] = {5, 15, 15, 15, 15, 15};

                    PdfPTable table = new PdfPTable(x);
                    table.getDefaultCell().setHorizontalAlignment(Element.ALIGN_CENTER);

                    table.addCell("ID");
                    table.addCell("Employee ID");
                    table.addCell("Basic Salary");
                    table.addCell("OT Rate");
                    table.addCell("Bonus");
                    table.addCell("Date");

                    table.setHeaderRows(1);

                    PdfPCell[] cells = table.getRow(0).getCells();
                    for (int i = 0; i < cells.length; i++) {
                        cells[i].setBackgroundColor(BaseColor.LIGHT_GRAY);
                    }

                    List<Salary_shedule> list = new ArrayList<>();
                    list = Salary_sheduleController.getInstance().SearchAll();
                    for (int i = 0; i < list.size(); i++) {
                        table.addCell(list.get(i).getSalary_shedule_id() + "");
                        table.addCell(list.get(i).getEmp_id() + "");
                        table.addCell(list.get(i).getBasic_salary() + "");
                        table.addCell(list.get(i).getOt_rate() + "");
                        table.addCell(list.get(i).getBonus() + "");
                        table.addCell(list.get(i).getDate_time() + "");

                    }

                    doc.add(table);

                    doc.close();
                    response.getWriter().println("Report Created!");
                } catch (Exception ex) {
                    response.getWriter().println(ex);
                    //Error
                }

            }

        }
    }

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    @Override
    public String getServletInfo() {
        return "Short description";
    }
}
